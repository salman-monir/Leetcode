//Grid traversal special problem//
https://leetcode.com/problems/number-of-islands/description/
class Solution {
    private:
    void BFS(int row,int col,vector<vector<int>> &vis,vector<vector<char>> &grid){
        queue<pair<int,int>>q;
        q.push({row,col});
        vis[row][col]=1;
        int n=grid.size();
        int m=grid[0].size();
        while(!q.empty()){
            int row=q.front().first;
            int col=q.front().second;
            int rw,cl;q.pop();
            int ar[]={-1,0,1,0};
            int arr[]={0,1,0,-1};
            for(int i=0;i<4;i++){
                rw=row+ar[i];
                cl=col+arr[i];
                if( (rw>=0 && rw<n) && (cl>=0 && cl<m) &&(grid[rw][cl]=='1') && (!vis[rw][cl]) ){
                    vis[rw][cl]=1;
                    q.push({rw,cl});
                }
            }

        }
    }
public:
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        int cnt=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1' && (!vis[i][j])){
                    cnt++;
                    BFS(i,j,vis,grid);
                }
            }
        }
        return cnt;
        
    }
};
